---
name: build
on:
  push:
    tags:
      - v*
    branches:
      - main
      - master
  pull_request:
permissions:
  contents: write
  pull-requests: read
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        go:
          - '1.18'
          - '1.19'
    env:
      DNS_HOST: ns.example.com
      DNS_REALM: EXAMPLE.COM
      DNS_USERNAME: test
      DNS_PASSWORD: password
      DNS_KEYTAB: /home/runner/work/tsig/tsig/testdata/test.keytab
      KRB5_CONFIG: /home/runner/work/tsig/tsig/testdata/docker/krb5.conf
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - name: Create infrastructure
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq libkrb5-dev krb5-user
          sudo docker buildx build --target kdc --tag kdc testdata/docker/
          sudo docker buildx build --target ns --tag ns testdata/docker/
          sudo docker buildx build --target keytab --output type=local,dest=testdata/ testdata/docker/
          sudo docker run -d --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /etc/localtime:/etc/localtime:ro -p 127.0.0.1:88:88 -p 127.0.0.1:88:88/udp -p 127.0.0.1:464:464 -p 127.0.0.1:464:464/udp --rm --name kdc kdc
          sudo docker run -d --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /etc/localtime:/etc/localtime:ro -p 127.0.0.1:53:53 -p 127.0.0.1:53:53/udp --rm --name ns --hostname $DNS_HOST ns
          echo 127.0.0.1 $DNS_HOST | sudo tee -a /etc/hosts
          sudo chmod 644 $DNS_KEYTAB
          echo $DNS_PASSWORD | kinit $DNS_USERNAME@$DNS_REALM
      - name: Test (gokrb5)
        run: go test -v -coverprofile=gokrb5.out ./...
      - name: Test (apcera)
        run: go test -v -coverprofile=apcera.out -tags apcera ./...
      - name: Build (SSPI)
        run: go build ./...
        env:
          GOOS: windows
      - name: Install coverage tools
        run: |
          go get github.com/wadey/gocovmerge
          go get github.com/mattn/goveralls
        env:
          GO111MODULE: off
      - name: Merge coverage reports
        run: gocovmerge gokrb5.out apcera.out >cover.out
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: cover.out
          flag-name: Go-${{ matrix.go }}
          parallel: true
  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5.0.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
